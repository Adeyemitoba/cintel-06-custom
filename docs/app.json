[{"name": "app.py", "content": "import faicons as fa\nimport plotly.express as px\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport asyncio  \nfrom shiny import render, req\nfrom shiny.express import input, ui\n\n# Load fitness data\nfitness_data = px.data.gapminder()\n\n# Add page title and sidebar\nui.page_opts(title=\"Fitness Tracker\", fillable=True)\n\n# Sidebar\nwith ui.sidebar(open=\"desktop\", style=\"background-color: green\"):\n    ui.input_slider(\"n\", \"Number of Bins\", 1, 100, 20)\n\n    # Date input\n    ui.input_date(\"date\", \"Date\")\n\n    # Text area input\n    ui.input_text_area(\"textarea\", \"Text input\", \"Hello World\")\n\n    # Integrated UI elements\n    ui.h6(\"Links:\", style=\"color: #fff;\")\n    ui.a(\"GitHub Source\", href=\"https://github.com/Adeyemitoba/cintel-06-custom\", target=\"_blank\", style=\"color: #fff; text-decoration: none; display: block; margin-bottom: 10px;\")\n    ui.a(\"PyShiny\", href=\"https://shiny.posit.co/py/\", target=\"_blank\", style=\"color: #fff; text-decoration: none; display: block; margin-bottom: 10px;\")\n\n# Main content with layout_columns\nwith ui.layout_columns(col_widths=[12, 6, 6]):\n    with ui.card(height=\"400px\"):\n        # Define function to render histogram\n        @render.plot(alt=\"Histogram of life expectancy.\")\n        def plot():\n            ax = sns.histplot(data=fitness_data, x=\"lifeExp\", bins=input.n())  \n            ax.set_title(\"Fitness Data\")\n            ax.set_xlabel(\"Life Expectancy\")\n            ax.set_ylabel(\"Count\")\n            return ax\n\n# Main content\nui.input_action_button(\"do_compute\", \"Analyze Fitness Data\")\n\n# Text area input value\n@render.text\ndef value():\n    return input.textarea()\n\n# Machine Learning Integration\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error\n\n# Select features and target variable\nX = fitness_data[['year', 'gdpPercap']]  # Example features\ny = fitness_data['lifeExp']  # Target variable\n\n# Split data into training and testing sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# Train a linear regression model\nmodel = LinearRegression()\nmodel.fit(X_train, y_train)\n\n# Make predictions\ny_pred = model.predict(X_test)\n\n# Evaluate model\nmse = mean_squared_error(y_test, y_pred)\nprint(\"Mean Squared Error:\", mse)\nprint(\"Sample Predictions:\")\nfor i in range(5):\n    print(f\"Actual: {y_test.iloc[i]:.2f}, Predicted: {y_pred[i]:.2f}\")\n", "type": "text"}]